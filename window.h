#ifndef __WINDOW_H_#define __WINDOW_H_/* * Window IDs */#define AswID		128typedef struct{	WindowPtr	windowptr;			/*pointer to window structure*/	Rect		usable;				/*actual useable area after removing space taken by scroll bars*/	ControlHandle  hScroll;			/*scroll bar*/ 	ControlHandle  vScroll;			/*scroll bar*/	long		grow;				/*can the window grow*/	Point		theOrigin;			/*window origin*/	long		fsize;				/*size of font in this window*/	long		lsize;				/*spacing for lines*/	long 		forigin;			/*# pixels up from base line to place pen*/	long		leading;			/*space between lines as defined in font info*/	long		nlines;				/*number of lines in display*/	long 		tlines;				/*total num lines 4 window*/	long		topMargin;			/*top of scrollable rect*/	long		mbase;				/*first memory location*/	long         secure;             /*if can't open it*/	void		(*update_window)(void);		/*handles update events*/	void		(*activate_window)(long); 	/*handles window specific activ events*/	void		(*click_window)(Point *);	/*handle mouse clicks*/	void 		(*keypress)(long);			/*handle keyboard input */	void 		(*undo_keypress)(void); 	/*handle Undo's for this window*/	void		(*doscroll)(short, short);	/*scroll for this window*/	void		(*dogrow)(void);			/*grow for this window*/} 	OurWindows, *OurWindowPtr;#define AsWindow 		window_p#define NumWindows	1#ifdef _WINDOW_C_Rect				dragRect;WindowRecord		wRecord[NumWindows];	/* allocate space for windows */WindowRecord		*wRecord_base_p = wRecord;	/* Base address for allocated space for windows */OurWindows			window[NumWindows];	OurWindows			*window_p = window;	ControlHandle 		whichControl;WindowPtr			theActiveWindow;WindowPtr			whichWindow;CursHandle			ibeamHdl;Rect				screenRect;static RgnHandle	updateRgn;#endifextern Rect					dragRect;extern WindowRecord			wRecord[NumWindows];	/* allocate space for windows */extern OurWindows			window[NumWindows];extern OurWindows			*window_p;extern ControlHandle 		whichControl;extern WindowPtr			theActiveWindow;extern WindowPtr			whichWindow;extern CursHandle			ibeamHdl;extern Rect					screenRect;/*Functions*/void setup_a_window(	short window_id,	short hscroll_id,	short vscroll_id,	short font_size,	void (*update_fn)(void),	void (*activate_window_fn)(long),	long top_margin_offset,	long growable,	void (*click_fn)(Point *),	void (*keypress_fn)(long),	void (*undo_keypress_fn)(void),	void (*doscroll_fn)(short,short),	void (*dogrow_fn)(void));void setupwindows(void);void doupdate(	OurWindowPtr owp,	long erase);void do_activate(	OurWindowPtr wp,	long is_active);void MyDrawGrow(	OurWindowPtr lWindow);void MoveScrollBars(	OurWindowPtr lWindow);void UsableRect(	OurWindowPtr lWindow);void GrowWnd(	OurWindowPtr lWindow,	Point	where);void ScrollBits(void);pascal voidScrollUp(	ControlHandle whichControl,	short theCode);pascal voidScrollDown(	ControlHandle whichControl,	short theCode);void PageScroll(	short code,	short amount);#endif