#ifndef BIGNUM_H#define BIGNUM_H/*Function bignum1.c*/Bignum *as_atof(	Bignum  *a_big_number_p,	char	*numbuf,	long	radix,	Ovf	*ovfp);Bignum *as_atoi(	Bignum  *a_big_number_p,	reg	char	*ccp,		/* character cp */	long	radix,	Ovf		*ovfp);Ovf posovf(	reg	chptr	src);long isclear(	reg	chptr	dst);long isunequal(	reg	chptr	src1,	reg	chptr	src2);Ovf numclear(	reg	chptr	dst);Ovf numshift(		long	n,		/*number of bits being shifted*/	reg	chptr	dst, 	reg	chptr	src);Ovf numaddd(	chptr	dst, 	chptr	src1,	long	val);Ovf numaddv(	reg	chptr	dst, 	reg	chptr	src1,	reg	chptr	src2);Ovf numnegate(	chptr	dst, 	chptr	src);Ovf num1comp(	reg	chptr	dst, 	reg	chptr	src);long slitflt(	Bignum	number,		/* number presented */	long	argtype,	/* what the instruction expects */	long	*valuep);#ifndef STANDALONEvoid bignumwrite(	Bignum	number,	long	toconv 		/* one of TYP[QO FDGH] */);#endif STANDALONE/*Functions bignum2.c*/Bignum *intconvert(	Bignum  *a_big_number_p,	Bignum	number,	long	convto);Bignum *floatconvert(	Bignum  *a_big_number_p,	Bignum	number,	long	convto);Bignum *bignumconvert(	Bignum  *a_big_number_p,	Bignum	number,	long	toconv,	Ovf		*ovfp);Bignum *bignumunpack(	Bignum  *a_big_number_p,	Bignum	Packed,	Ovf		*ovfp);Bignum *bignumpack(	Bignum  *a_big_number_p,	Bignum	Unpacked,	long	toconv,	Ovf		*ovfp);void mapnumber(		chptr	chp1, 		chptr	chp2,		long	nbytes,		char	*themap);long upround(	reg	Bignum	*numberp,	reg	struct	ty_bigdesc	*p,		long	exponent);#ifdef DEBUGvoid bignumprint(	Bignum	number);void numprintovf(	Ovf	ovf);#endif DEBUG/*Functions natof.c*/Bignum *bigatof(	Bignum  	*a_big_number_p,	reg	char	*str,		/* r11 */	long		radix 		/* TYPF ... TYPH */);#endif  BIGNUM_H